name: e2e test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  start-devnet:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Clarinet
      run: |
        wget -nv https://github.com/hirosystems/clarinet/releases/download/v2.8.0/clarinet-linux-x64-glibc.tar.gz -O clarinet-linux-x64.tar.gz
        tar -xf clarinet-linux-x64.tar.gz
        chmod +x ./clarinet
        sudo mv ./clarinet /usr/local/bin
        clarinet --version

    - name: Check Clarinet.toml location
      run: |
        ls -R ${{ github.workspace }}
        if [ -f "${{ github.workspace }}/Clarinet.toml" ]; then
          echo "Clarinet.toml found in workspace root"
          cat "${{ github.workspace }}/Clarinet.toml"
        else
          echo "Clarinet.toml not found in workspace root"
          find ${{ github.workspace }} -name Clarinet.toml
        fi

    - name: Start Clarinet Devnet in Background
      run: |
        clarinet devnet start --manifest-path ${{ github.workspace }}/Clarinet.toml > devnet.log 2>&1 &
        echo $! > devnet.pid
        sleep 10  # Give the devnet some time to start up

    - name: Check if Devnet is Running
      run: |
        if [ -f devnet.pid ]; then
          if kill -0 $(cat devnet.pid) 2>/dev/null; then
            echo "Devnet process is running"
            ps aux | grep clarinet
            echo "Last 20 lines of devnet.log:"
            tail -n 20 devnet.log
          else
            echo "Devnet process is not running"
            echo "Contents of devnet.log:"
            cat devnet.log
            exit 1
          fi
        else
          echo "devnet.pid file not found"
          ls -l
          exit 1
        fi

    # Add your additional steps here that require the devnet to be running

    - name: Stop Devnet
      if: always()
      run: |
        if [ -f devnet.pid ]; then
          if kill -0 $(cat devnet.pid) 2>/dev/null; then
            kill $(cat devnet.pid)
            echo "Devnet stopped"
          else
            echo "Devnet process not found"
          fi
        else
          echo "devnet.pid file not found"
        fi
